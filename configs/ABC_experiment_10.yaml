# Here's where you define experiment-specific hyperparameters.
# You can also create lists and group parameters together into nested sub-parts.
# In Python, this is all read as a dict.

# environment/computational parameters
seed: 32678456782       # random number generator seed (long integer value)
device: cuda            # if you have multiple GPU's, you can use 'cude:4' to specify which GPU to run on, e.g., the 4th
num_workers: 4          # number of CPU cores that load data in parallel. You can set this to the number of logical CPU cores that you have. 

save_path: "/home/Thomas/ABC_expeditions_classifier/model_states"
experiment_name: "ABC_experiment_10"

# dataset parameters
data_root: "/mnt/class_data/group2/thomasluypaert/CV4E_small"
num_classes: 30 
# model parameters
model_depth: "ResNet50"
# transformation parameters
pad: False
flip_prob: 0.5
rot_range: [-5, 5]
# training hyperparameters
image_size: [224, 224]
num_epochs: 200         # number of epochs. Each epoch has multiple iterations. In each epoch the model goes over the full dataset once.
batch_size: 128         # number of images that are processed in parallel in every iteration
learning_rate: 0.001    # hyperparameter to adjust the optimizer's learning rate 
weight_decay: 0.001     # hyperparameter for regularization

# early-stopping hyperparameters
patience: 10

# transformation parameters

  # normalization
normalize: True

  # random cropping
random_crop: False
crop_perc_red: 10
crop_prob: 0.5

  # brightness
random_brightness: False
brightness_change: 0.2
brightness_prob: 0.5

  # contrast
random_contrast: False
contrast_change: 0.2
contrast_prob: 0.5

  # blur

random_blur: False
blur_kernel: 5
blur_sig_1: 0.1
blur_sig_2: 2.0
blur_prob: 0.25

  # greyscale

all_greyscale: False

  # Self-destruct

self_destruct: False
